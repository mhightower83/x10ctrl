<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0, minimum-scale=1.0">
<meta name="mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-capable" content="yes">

<!--Details for this are from: https://developers.google.com/web/fundamentals/web-app-manifest/ -->
<link rel="manifest" href="/manifest.json">

<link href="https://fonts.googleapis.com/css?family=Source+Code+Pro" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">

<title>HA Remote</title>

<style>
/* Chrome, Safari and Opera syntax */
:-webkit-full-screen {
  background-color: black;
  color: white;
}

/* Firefox syntax */
:-moz-full-screen {
  background-color: black;
  color: white;
}

/* IE/Edge syntax */
:-ms-fullscreen {
  background-color: black;
  color: white;w;
}

/* Standard syntax */
:fullscreen {
  background-color: black;
  color: white;
}

.centered {
  position: fixed; /* or absolute */
  top: 50%;
  left: 50%;
  /* bring your own prefixes */
  overflow-y: auto;   /* allows verticle scroll */
  height: 100%;
  transform: translate(-50%, -50%);
}

.offscreen {
    left: -9999px;
    position: relative;
}

html, body {
    font-family: 'Open Sans', Helvetica, Arial, sans-serif;
    font-size: 1em;
    line-height: 1.5;
    word-wrap: break-word;
    background-color: black;
    color: white;
}

td {
    font-family: 'Open Sans', Helvetica, Arial, sans-serif;
    font-size: 1.3em;
  	font-weight: bold;
}

#targetDiv {
    width: 100%
}

#targetLog {
    display: none; /* comment out to show logevents in the background */
}

.logging {
    font-family: 'Source Code Pro', monospace;
    font-size: 1em;
    line-height: 1.25;
}

h1 {
    font-size: 2em;
    font-weight: bold;
}

.device {  /* Device Name field of table */
  width: 100%;
}

.container {
	text-align: center;
}

/* Buttons from https://www.bestcssbuttongenerator.com/ */
/* Usage: <a href="#" class="myButtonOn">On</a>*/
.myButtonOn {
	-moz-box-shadow:inset 0px 1px 0px 0px #caefab;
	-webkit-box-shadow:inset 0px 1px 0px 0px #caefab;
	box-shadow:inset 0px 1px 0px 0px #caefab;
	background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #77d42a), color-stop(1, #5cb811));
	background:-moz-linear-gradient(top, #77d42a 5%, #5cb811 100%);
	background:-webkit-linear-gradient(top, #77d42a 5%, #5cb811 100%);
	background:-o-linear-gradient(top, #77d42a 5%, #5cb811 100%);
	background:-ms-linear-gradient(top, #77d42a 5%, #5cb811 100%);
	background:linear-gradient(to bottom, #77d42a 5%, #5cb811 100%);
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#77d42a', endColorstr='#5cb811',GradientType=0);
	background-color:#77d42a;
	-moz-border-radius:16px;
	-webkit-border-radius:16px;
	border-radius:16px;
	border:1px solid #268a16;
	display:inline-block;
	cursor:pointer;
	color:#306108;
	/*font-family:Arial;*/
	/*font-size:15px;*/
	font-size:1.2em;
	font-weight:bold;
	padding:16px 16px;
	text-decoration:none;
	text-shadow:0px 1px 0px #aade7c;
}
.myButtonOn:hover {
	background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #5cb811), color-stop(1, #77d42a));
	background:-moz-linear-gradient(top, #5cb811 5%, #77d42a 100%);
	background:-webkit-linear-gradient(top, #5cb811 5%, #77d42a 100%);
	background:-o-linear-gradient(top, #5cb811 5%, #77d42a 100%);
	background:-ms-linear-gradient(top, #5cb811 5%, #77d42a 100%);
	background:linear-gradient(to bottom, #5cb811 5%, #77d42a 100%);
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#5cb811', endColorstr='#77d42a',GradientType=0);
	background-color:#5cb811;
}
.myButtonOn:active {
	position:relative;
	top:1px;
}

/* Usage: <a href="#" class="myButtonOff">Off</a>*/
.myButtonOff {
	-moz-box-shadow:inset 0px 1px 0px 0px #f5978e;
	-webkit-box-shadow:inset 0px 1px 0px 0px #f5978e;
	box-shadow:inset 0px 1px 0px 0px #f5978e;
	background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #f24537), color-stop(1, #c62d1f));
	background:-moz-linear-gradient(top, #f24537 5%, #c62d1f 100%);
	background:-webkit-linear-gradient(top, #f24537 5%, #c62d1f 100%);
	background:-o-linear-gradient(top, #f24537 5%, #c62d1f 100%);
	background:-ms-linear-gradient(top, #f24537 5%, #c62d1f 100%);
	background:linear-gradient(to bottom, #f24537 5%, #c62d1f 100%);
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f24537', endColorstr='#c62d1f',GradientType=0);
	background-color:#f24537;
	-moz-border-radius:16px;
	-webkit-border-radius:16px;
	border-radius:16px;
	border:1px solid #d02718;
	display:inline-block;
	cursor:pointer;
	color:#ffffff;
	/*font-family:Arial;*/
	/*font-size:15px;*/
	font-size:1.2em;
	font-weight:bold;
	padding:16px 16px;
	text-decoration:none;
	text-shadow:0px 1px 0px #810e05;
}

.myButtonOff:hover {
	background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #c62d1f), color-stop(1, #f24537));
	background:-moz-linear-gradient(top, #c62d1f 5%, #f24537 100%);
	background:-webkit-linear-gradient(top, #c62d1f 5%, #f24537 100%);
	background:-o-linear-gradient(top, #c62d1f 5%, #f24537 100%);
	background:-ms-linear-gradient(top, #c62d1f 5%, #f24537 100%);
	background:linear-gradient(to bottom, #c62d1f 5%, #f24537 100%);
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#c62d1f', endColorstr='#f24537',GradientType=0);
	background-color:#c62d1f;
}

.myButtonOff:active {
	position:relative;
	top:1px;
}

</style>
</head>
<body>
<div id="targetDiv" class="centered"></div>
<div id="targetLog" class="logging"></div>

<script>
var targetLog = document.getElementById("targetLog");
targetLog.innerHTML = "";
function logIt(msg) {
    targetLog.innerHTML += "<pre>" + msg + "</pre>";
}

// https://www.w3schools.com/howto/howto_js_fullscreen.asp
/* Get the element you want displayed in fullscreen mode (a video in this example): */
/* View in fullscreen */
function openFullscreen(value) {
  // let elem = document.documentElement;
  let elem = document.getElementById(value);
  if (elem.requestFullscreen) {
    elem.requestFullscreen();
  } else if (elem.mozRequestFullScreen) { /* Firefox */
    elem.mozRequestFullScreen();
  } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */
    elem.webkitRequestFullscreen();
  } else if (elem.msRequestFullscreen) { /* IE/Edge */
    elem.msRequestFullscreen();
  }
}

/* Close fullscreen */
function closeFullscreen() {
  if (document.exitFullscreen) {
    document.exitFullscreen();
  } else if (document.mozCancelFullScreen) { /* Firefox */
    document.mozCancelFullScreen();
  } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */
    document.webkitExitFullscreen();
  } else if (document.msExitFullscreen) { /* IE/Edge */
    document.msExitFullscreen();
  }
}

// Do a PUT to set light on or off or brightness
function putUrl(path, state) {
    var json;
    if (isNaN(state) || state === true || state === false) {
        json = '{"on": ' + state + '}';
    } else {
        let bri = 255;
        if (state >=  0 && state < 255) {
            bri = state;
        }
        json = '{"bri": ' + state + '}';
    }
    // var json = '{"on": ' + state + ', "bri": 200 }';

    var xhr = new XMLHttpRequest();
    let url = path;
    // console.log(url);
    xhr.open("PUT", url, true);
    xhr.setRequestHeader('Content-type','application/json; charset=utf-8');
    // xhr.setRequestHeader('Access-Control-Allow-Origin', '*/*');
    // xhr.setRequestHeader('Access-Control-Allow-Headers', '*');
    xhr.onload = function () {
    	var users = JSON.parse(xhr.responseText);
    	if (xhr.readyState == 4 && xhr.status == "200") {
    		console.table(users);
    		logIt("PUT: Success");
    	} else {
    		console.error(users);
    		logIt("PUT: Failed: " + xhr.readyState + " " + xhr.status);
    	}
    }
    xhr.send(json);
    logIt( "PUT: " + url + " <= " + json);

    return false;
}

function showMe(srcFile, elementId, displayRawHtml, displayText, displayJson) {
      function mkButton(id, state, label) {
        let url = srcFile + "/api/nobody/lights/" + id + "/state";
        return '<a id="id' + id + '-' + label + '" title="Click for ' +
                label + '" href="#" onclick="putUrl(\'' + url + '\', ' + state +
                ');return false;" class="myButton' + label + '">' + label + '</a>';
      }
      let pathFile = srcFile + '/api/devices';
      fetch(pathFile, {mode: "cors"}).then(function (response) {
        if (response.status === 404) {
            alert("Oops! Missing file: " + pathFile);
            return;
        }
        if (response.status !== 200) {
            console.log("Fetch failed with status: " + response.status);
            return;
        }
        response.text().then(function (data) {
          var target;
          if (elementId === undefined) {
              elementId = "targetDiv" ;
          }
          target = document.getElementById(elementId);
          if (displayJson === true) {
            let jData = JSON.parse(data);
              let html = "";
              //"<center><button onclick=\"openFullscreen('targetDiv');\">full screen</button><button onclick=\"closeFullscreen();\">normal</button></center>";
              // html += "<table><tbody>";
              html += "<table align=\"center\"><tbody>";

              for (let i=0; i<jData.length; i++) {
                  let dimmable = false;
                  if (jData[i].dimUrl) {
                      let jItem = JSON.parse(jData[i].dimUrl);
                      if (jItem) {
                          dimmable = true;
                      }
                  }
                  html += "<tr>";
                  html += '<td style="text-align:center;">';
                  html += mkButton(jData[i].id, true, "On");
                  html += '</td>';

                  html += '<td style="text-align:center;" class="device">' + jData[i].name + "</td>";

                  html += '<td style="text-align:center;">';
                  html += mkButton(jData[i].id, false, "Off");
                  html += '</td>';
                  html += "</tr>";
                  // target.innerHTML += "<pre>" + jData[i].id + ", " + jData[i].name + ", " + ((dimmable)? "Dimmable" : "Not dimmable") + "</pre>";
              }
              html += "</tbody></table>";
              target.innerHTML = html;
              // target.innerHTML = escapeFormatedText(html);
          }
        });
    }).catch(function (err) {
        console.log("Fetch Error :-S", err);
    });
}

function showJson(srcFile) {
    showMe(srcFile, "targetDiv", false, false, true);
}

showJson('');

</script>
</body>
</html>
